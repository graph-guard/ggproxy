schema: >
  type Query { f(
    eq:[I!]!
    neq:[I!]!
    gr:[I!]!
    le:[I!]!
    greq:[I!]!
    leeq:[I!]!
  ):Int }
  input I { x:Int! }

template: >
  query { f(
    eq:   len 0,
    neq:  len != 0,
    gr:   len > 1,
    le:   len < 2,
    greq: len >= 3,
    leeq: len <= 4,
  ) }

inputs:
  Query.f|eq:
    match: true
    tokens: # len eq
      - Arr:
      - ArrEnd:
  Query.f|neq:
    match: true
    tokens: # len not eq
      - Arr:
      - Obj:
      - ObjField: "x"
      - Int: 1
      - ObjEnd:
      - ArrEnd:
  Query.f|gr:
    match: true
    tokens: # len gr
      - Arr:
      - Obj:
      - ObjField: "x"
      - Int: 1
      - ObjEnd:
      - Obj:
      - ObjField: "x"
      - Int: 2
      - ObjEnd:
      - ArrEnd:
  Query.f|le:
    match: true
    tokens: # len le
      - Arr:
      - Obj:
      - ObjField: "x"
      - Int: 1
      - ObjEnd:
      - ArrEnd:
  Query.f|greq:
    match: true
    tokens: # len eq
      - Arr:
      - Obj:
      - ObjField: "x"
      - Int: 1
      - ObjEnd:
      - Obj:
      - ObjField: "x"
      - Int: 2
      - ObjEnd:
      - Obj:
      - ObjField: "x"
      - Int: 3
      - ObjEnd:
      - ArrEnd:
  Query.f|leeq:
    match: true
    tokens: # len eq
      - Arr:
      - Obj:
      - ObjField: "x"
      - Int: 1
      - ObjEnd:
      - Obj:
      - ObjField: "x"
      - Int: 2
      - ObjEnd:
      - Obj:
      - ObjField: "x"
      - Int: 3
      - ObjEnd:
      - Obj:
      - ObjField: "x"
      - Int: 4
      - ObjEnd:
      - ArrEnd:
