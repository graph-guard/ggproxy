schema: >
  type Query { f(
    eq:[Int]!
    neq:[Int]!
    gr:[Int]!
    le:[Int]!
    greq:[Int]!
    leeq:[Int]!
  ):Int }

template: >
  query { f(
    eq:   len 0,
    neq:  len != 0,
    gr:   len > 1,
    le:   len < 2,
    greq: len >= 3,
    leeq: len <= 4,
  ) }

inputs:
  Query.f|eq:
    match: false
    tokens: # len diff: +1
      - Arr:
      - Int: 1
      - ArrEnd:
  Query.f|neq:
    match: false
    tokens: # len eq
      - Arr:
      - ArrEnd:
  Query.f|gr:
    match: false
    tokens: # len diff: -1
      - Arr:
      - Int: 1
      - ArrEnd:
  Query.f|le:
    match: false
    tokens: # len diff: +1
      - Arr:
      - Int: 1
      - Int: 2
      - ArrEnd:
  Query.f|greq:
    match: false
    tokens: # len diff: -1
      - Arr:
      - Int: 1
      - Int: 2
      - ArrEnd:
  Query.f|leeq:
    match: false
    tokens: # len diff: +1
      - Arr:
      - Int: 1
      - Int: 2
      - Int: 3
      - Int: 4
      - Int: 5
      - ArrEnd:
