client:
  input:
    method: POST
    endpoint: /service_a
    body(JSON):
      query: >
        mutation(
          $foo:String! = "foo",
          $bar:String! = "bar",
        ) {
          arr_str_eq(a: [$foo, $bar])
        }

  expect-response:
    status: 200
    headers:
      Content-Length: ^27$
      Content-Type: ^text/plain; charset=utf-8$
      Server: ^fasthttp$
      Date: .
      X-Custom-Header: value
    body(JSON):
      data:
        arr_str_eq: ["foo", "bar"]

destination:
  expect-forwarded:
    headers:
      X-Forwarded-Host: ^localhost:8000$
      X-Forwarded-For: 0.0.0.0
      X-Forwarded-Proto: ^HTTP/1.1$
      Host: ^localhost:8081$
      Content-Length: ^68$
      Content-Type: ^application/json$
      User-Agent: ^fasthttp$
      Date: .
    body(JSON):
      query: >
        mutation(
          $foo:String! = "foo",
          $bar:String! = "bar",
        ) {
          arr_str_eq(a: [$foo, $bar])
        }

  response:
    status: 200
    headers:
      X-Custom-Header: value
    body(JSON):
      data:
        arr_str_eq: ["foo", "bar"]

logs:
  - level: info
    message: 'listening'
    host: localhost:8080
    tls: false
    services:
      - service_a
  - level: info
    message: 'handling request'
    path: /service_a
  - level: debug
    path: /service_a
    query: >
      mutation(
        $foo:String! = "foo",
        $bar:String! = "bar",
      ) {
        arr_str_eq(a: [$foo, $bar])
      }