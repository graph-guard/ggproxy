client:
  input:
    method: POST
    endpoint: "/service_a"
    body: >
      {
        "query": "mutation X { a { a0(a0_0: [ 0 ]) } }",
        "operationName": "X",
        "variables": {}
      }
  expect-response:
    status: 200
    headers:
      Content-Length: ^64$
      Content-Type: ^text/plain; charset=utf-8$
      Server: "fasthttp"
      Date: .
      X-Custom-Header: value
    body: >
      {
        "data": {
            "a": {
                "a0": "foo"
            } 
        }
      }
destination:
  expect-forwarded:
    headers:
      Host: ^http://localhost:8081/service_a$
      Content-Length: ^97$
      Content-Type: ^application/json$
      User-Agent: "fasthttp"
      Date: .
    body: >
      {
        "query": "mutation X { a { a0(a0_0: [ 0 ]) } }",
        "operationName": "X",
        "variables": {}
      }
  response:
    status: 200
    headers:
      X-Custom-Header: value
    body: >
      {
        "data": {
            "a": {
                "a0": "foo"
            } 
        }
      }
logs:
  - level: info
    host: localhost:8080
    message: "listening"
    services:
      - service_a
  - level: info
    path: "/service_a"
    message: "handling request"
  - level: debug
    path: "/service_a"
    query: >
      {
        "query": "mutation X { a { a0(a0_0: [ 0 ]) } }",
        "operationName": "X",
        "variables": {}
      }
